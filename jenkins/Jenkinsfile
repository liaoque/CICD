node('master'){        
    stage('Preparation'){
        updateGitlabCommitStatus name: 'dddd555', state: 'running' 
        checkout scm
    }
    stage("test") {
        try{
            def scannerHome = tool 'jenkinsSonarQubeClient';
            withSonarQubeEnv('jenkins--SonarQube') {
                sh "${scannerHome}/bin/sonar-scanner"
            }
            
            timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }

            docker.image('registry.cn-shenzhen.aliyuncs.com/liaoque/php-fpm-test:7.4-1.0').inside { 
                sh "phpunit --version"
                sh "phpunit --log-junit 'reports/junit.xml' --coverage-html 'reports/coverage' --coverage-clover 'reports/coverage/coverage.xml' --whitelist './' *Test.php"
            }
        }catch (exc) {
            dingTalk accessToken: 'c1c5a3c67781e76e4fd2fa1a98d939896e2c3eb5ddfdd79a4921ea65c9d761c6', imageUrl: 'http://www.iconsdb.com/icons/preview/soylent-red/x-mark-3-xxl.png', jenkinsUrl: 'http://192.168.133.129:18080', message: '失败项目', notifyPeople:'Jenkins-PipeLine'
            updateGitlabCommitStatus name: 'dddd555', state: 'failed'
            addGitLabMRComment comment: "构建失败，不允许合并."
            throw exc
        }
    }
    stage("result") {
        xunit([JUnit(deleteOutputFiles: true, failIfNotNew: true, pattern: 'reports/junit.xml', skipNoTestFiles: false, stopProcessingIfError: false)])
        step([
            $class: 'CloverPublisher',
            cloverReportDir: 'reports/coverage',
            cloverReportFileName: 'coverage.xml',
            healthyTarget: [methodCoverage: 70, conditionalCoverage: 80, statementCoverage: 80], // optional, default is: method=70, conditional=80, statement=80
            unhealthyTarget: [methodCoverage: 50, conditionalCoverage: 50, statementCoverage: 50], // optional, default is none
            failingTarget: [methodCoverage: 0, conditionalCoverage: 0, statementCoverage: 0]     // optional, default is none
        ])
        updateGitlabCommitStatus name: 'dddd555', state: 'success' 
        addGitLabMRComment comment: "测试成功，可以合并."
        dingTalk accessToken: 'c1c5a3c67781e76e4fd2fa1a98d939896e2c3eb5ddfdd79a4921ea65c9d761c6', imageUrl: 'http://icons.iconarchive.com/icons/paomedia/small-n-flat/1024/sign-check-icon.png', jenkinsUrl: 'http://192.168.133.129:18080', message: '成功项目', notifyPeople:'Jenkins-PipeLine'
        
    }
}

